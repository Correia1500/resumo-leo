services:
  backend:
    build: ./backend
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app  
      - /app/node_modules  
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=admin
      - DB_NAME=resumos
    command: ["npm", "run", "dev"]  
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build: ./meu-app
    ports:
      - "3000:3000"
    volumes:
      - ./meu-app:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://backend:4000

  n8n:
    image: docker.n8n.io/n8nio/n8n
    ports:
      - "5678:5678"
    volumes:
      - ./n8n_data:/home/node/.n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=false
    restart: always

  flowise:
    image: flowiseai/flowise
    ports:
      - "3001:3000"
    volumes:
      - ./flowise_data:/root/.flowise
    environment:
      - PORT=3000
      - FLOWISE_USERNAME=admin
      - FLOWISE_PASSWORD=admin
    restart: always

  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=resumos
    ports:
      - "5432:5432"
    volumes:
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d resumos"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    volumes:
      - .:/code
      - ./ollama/ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    

networks:
  default:
    name: my-network
    driver: bridge